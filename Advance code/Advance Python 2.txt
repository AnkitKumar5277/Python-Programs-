# advance python 2
# virtual Environment
# import flask
# import pandas as pd
# import pygame

# lambda function
'''
def func(a):
  return a+5

x = 4
print(func(x))
'''

# another method
'''
func = lambda a: a + 8
square = lambda x: x*x
sum = lambda a, b, c: a+b+c

x = 2
print(func(x))
print(square(x))
print(sum(x,1,3))
'''

# join in list and tuple() and iterate
'''
l = ["Camera", "Laptop", "Phone", "ipad", "Hard disk"]
sentence = " and ".join(l)
print(sentence)
print(" or ".join(l))
print("\n".join(l))
print(type(sentence))
'''

# format method
'''
name = "ankit"
a = f"this is {name}"
print(a)
'''

# another method
'''
name = "ankit"
channel = "software - X"
type = "coding"
a = "this is {}".format(name)
b = "this is {} and his channal is {}".format(name, channel) 
c = "this is {0} and his {2} channel is {1}".format(name, channel, type)
print(a)
print(b)
print(c)
'''

# map
'''
def square(num):
  return num * num

l = [1,2,4]
l2 = []
for item in l:
  l2.append(square(item))

print(l2)
'''

# another method
'''
def square(num):
  return num * num
l = [1,2,4]
print(list(map(square,l)))
'''

# filter
'''
# list(filter(function,l))
def greater_than_5(num):
  if num >5:
    return True
  else:
    return False

l=[1,2,3,4,5,6,7,8,9,10]

print(list(filter(greater_than_5,l)))
'''

# another method
'''
l = [2,4,6,8,10]
ak = lambda num: num > 7
print(list(filter(ak,l)))
'''

# reduce
'''
from functools import reduce
sum = lambda a, b: a+b

l = [1,2,3,4]
val = reduce(sum,l)
print(val)
'''

